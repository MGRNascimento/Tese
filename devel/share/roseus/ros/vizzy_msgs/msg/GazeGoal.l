;; Auto-generated. Do not edit!


(when (boundp 'vizzy_msgs::GazeGoal)
  (if (not (find-package "VIZZY_MSGS"))
    (make-package "VIZZY_MSGS"))
  (shadow 'GazeGoal (find-package "VIZZY_MSGS")))
(unless (find-package "VIZZY_MSGS::GAZEGOAL")
  (make-package "VIZZY_MSGS::GAZEGOAL"))

(in-package "ROS")
;;//! \htmlinclude GazeGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(intern "*FIXATION_POINT*" (find-package "VIZZY_MSGS::GAZEGOAL"))
(shadow '*FIXATION_POINT* (find-package "VIZZY_MSGS::GAZEGOAL"))
(defconstant vizzy_msgs::GazeGoal::*FIXATION_POINT* 0)
(intern "*HOME*" (find-package "VIZZY_MSGS::GAZEGOAL"))
(shadow '*HOME* (find-package "VIZZY_MSGS::GAZEGOAL"))
(defconstant vizzy_msgs::GazeGoal::*HOME* 1)
(intern "*JOINT_VELOCITIES*" (find-package "VIZZY_MSGS::GAZEGOAL"))
(shadow '*JOINT_VELOCITIES* (find-package "VIZZY_MSGS::GAZEGOAL"))
(defconstant vizzy_msgs::GazeGoal::*JOINT_VELOCITIES* 2)
(intern "*CARTESIAN*" (find-package "VIZZY_MSGS::GAZEGOAL"))
(shadow '*CARTESIAN* (find-package "VIZZY_MSGS::GAZEGOAL"))
(defconstant vizzy_msgs::GazeGoal::*CARTESIAN* 0)
(intern "*JOINT*" (find-package "VIZZY_MSGS::GAZEGOAL"))
(shadow '*JOINT* (find-package "VIZZY_MSGS::GAZEGOAL"))
(defconstant vizzy_msgs::GazeGoal::*JOINT* 1)
(defclass vizzy_msgs::GazeGoal
  :super ros::object
  :slots (_type _mode _fixation_point _fixation_point_error_tolerance ))

(defmethod vizzy_msgs::GazeGoal
  (:init
   (&key
    ((:type __type) 0)
    ((:mode __mode) 0)
    ((:fixation_point __fixation_point) (instance geometry_msgs::PointStamped :init))
    ((:fixation_point_error_tolerance __fixation_point_error_tolerance) 0.0)
    )
   (send-super :init)
   (setq _type (round __type))
   (setq _mode (round __mode))
   (setq _fixation_point __fixation_point)
   (setq _fixation_point_error_tolerance (float __fixation_point_error_tolerance))
   self)
  (:type
   (&optional __type)
   (if __type (setq _type __type)) _type)
  (:mode
   (&optional __mode)
   (if __mode (setq _mode __mode)) _mode)
  (:fixation_point
   (&rest __fixation_point)
   (if (keywordp (car __fixation_point))
       (send* _fixation_point __fixation_point)
     (progn
       (if __fixation_point (setq _fixation_point (car __fixation_point)))
       _fixation_point)))
  (:fixation_point_error_tolerance
   (&optional __fixation_point_error_tolerance)
   (if __fixation_point_error_tolerance (setq _fixation_point_error_tolerance __fixation_point_error_tolerance)) _fixation_point_error_tolerance)
  (:serialization-length
   ()
   (+
    ;; uint8 _type
    1
    ;; uint8 _mode
    1
    ;; geometry_msgs/PointStamped _fixation_point
    (send _fixation_point :serialization-length)
    ;; float64 _fixation_point_error_tolerance
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint8 _type
       (write-byte _type s)
     ;; uint8 _mode
       (write-byte _mode s)
     ;; geometry_msgs/PointStamped _fixation_point
       (send _fixation_point :serialize s)
     ;; float64 _fixation_point_error_tolerance
       (sys::poke _fixation_point_error_tolerance (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint8 _type
     (setq _type (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; uint8 _mode
     (setq _mode (sys::peek buf ptr- :char)) (incf ptr- 1)
   ;; geometry_msgs/PointStamped _fixation_point
     (send _fixation_point :deserialize buf ptr-) (incf ptr- (send _fixation_point :serialization-length))
   ;; float64 _fixation_point_error_tolerance
     (setq _fixation_point_error_tolerance (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get vizzy_msgs::GazeGoal :md5sum-) "a1b8bf39eac0adbf0be2f97a6f149676")
(setf (get vizzy_msgs::GazeGoal :datatype-) "vizzy_msgs/GazeGoal")
(setf (get vizzy_msgs::GazeGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
uint8 FIXATION_POINT=0
uint8 HOME=1             # POSITION ERROR SUPPRESSION
uint8 JOINT_VELOCITIES=2 # VELOCITY SUPPRESSION
uint8 type

uint8 CARTESIAN=0
uint8 JOINT=1
uint8 mode  # ONLY CARTESIAN IS IMPLEMENTED


geometry_msgs/PointStamped fixation_point

float64 fixation_point_error_tolerance  # max allowed error in meters
#float64 suppression_velocity # max allowed velocity in radians

================================================================================
MSG: geometry_msgs/PointStamped
# This represents a Point with reference coordinate frame and timestamp
Header header
Point point

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :vizzy_msgs/GazeGoal "a1b8bf39eac0adbf0be2f97a6f149676")


